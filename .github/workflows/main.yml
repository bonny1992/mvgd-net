name: Build and Publish Release Binaries

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '3.1.x'  # Use the appropriate version

      - name: Build and Publish Binaries
        run: |
          cd mvgd-net
          
          dotnet publish -c Release -r linux-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyName=${{ github.repository }}_${{ github.event.release.tag_name }}_linux-x64 -o ./publish/
          dotnet publish -c Release -r linux-arm64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyName=${{ github.repository }}_${{ github.event.release.tag_name }}_linux-arm64 -o ./publish/
          dotnet publish -c Release -r osx-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyName=${{ github.repository }}_${{ github.event.release.tag_name }}_osx-x64 -o ./publish/
          dotnet publish -c Release -r osx-arm64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyName=${{ github.repository }}_${{ github.event.release.tag_name }}_osx-arm64 -o ./publish/
          dotnet publish -c Release -r win-x64 /p:PublishSingleFile=true /p:PublishTrimmed=true /p:AssemblyName=${{ github.repository }}_${{ github.event.release.tag_name }}_win-x64 -o ./publish/
          rm -rf ./publish/*.pdb

      - name: Create Release Assets
        run: |
          cd mvgd-net/publish
          
          # Upload each binary as a release asset
          gh release upload ${{ github.event.release.tag_name }} * --clobber
        
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
